{"remainingRequest":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/babel-loader/lib/index.js!/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chao/Desktop/GPS-vue1/GPS-VR/src/components/Gps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/src/components/Gps.vue","mtime":1667988942885},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js","mtime":1668141352967},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/babel-loader/lib/index.js","mtime":1668141353020},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js","mtime":1668141352967},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/vue-loader/lib/index.js","mtime":1668141351619}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Gps',\n  props: {\n    title: String\n  },\n  beforeMount: function beforeMount() {\n\n    //   navigator.mediaDevices.enumerateDevices().then(function (devices) {\n    //       console.log(devices);\n    //  if(devices){ devices.forEach(function(e){\n    //       console.log(e)\n    //       if(e.kind==\"videoinput\")\n    //       {\n    //           camreass.push(e.deviceId)\n    //       }\n    //   })}\n    //   console.log(camreass)\n\n    // })\n  },\n  mounted: function mounted() {\n    // navigator.mediaDevices.enumerateDevices().then(function (devices) {\n    //       console.log(devices);\n    //  if(devices){ devices.forEach(function(e){\n    //       console.log(e)\n    //       if(e.kind==\"videoinput\")\n    //       {\n    //           camreass.push(e.deviceId)\n    //       }\n    //   })}\n    //   console.log(camreass)\n    // }).then(()=>{\n    // const length = camreass.length;\n    // const sceneEl = document.querySelector(\"[arjs]\");\n    // const sceneSy = sceneEl.systems[\"arjs\"];\n    // sceneEl.setAttribute('arjs',{sourceType: \"webcam\",deviceId:camreass[length-1],videoTexture: true,debugUIEnabled: false,})\n    // console.log(\"length1\",length);\n    // sceneSy.init(); \n    // })\n\n    // sceneSy.init(); \n\n    var testEntitiesAdded = false;\n    alert('If testing the lat/lon manual input on a mobile device, please turn off your GPS to avoid the real location being detected.');\n    var el = document.querySelector(\"[gps-new-camera]\");\n    el.addEventListener(\"gps-camera-update-position\", function (e) {\n      if (!testEntitiesAdded) {\n        alert(\"Got first GPS position: lon \".concat(e.detail.position.longitude, \" lat \").concat(e.detail.position.latitude));\n        // Add four boxes to the north (red), south (yellow), west (blue)\n        // and east (red) of the initial GPS position\n        var properties = [{\n          color: 'red',\n          latDis: 0.001,\n          lonDis: 0\n        }, {\n          color: 'yellow',\n          latDis: -0.001,\n          lonDis: 0\n        }, {\n          color: 'blue',\n          latDis: 0,\n          lonDis: -0.001\n        }, {\n          color: 'green',\n          latDis: 0,\n          lonDis: 0.001\n        }];\n        for (var _i = 0, _properties = properties; _i < _properties.length; _i++) {\n          var prop = _properties[_i];\n          var entity = document.createElement(\"a-box\");\n          entity.setAttribute(\"scale\", {\n            x: 20,\n            y: 20,\n            z: 20\n          });\n          entity.setAttribute('material', {\n            color: prop.color\n          });\n          entity.setAttribute('gps-new-entity-place', {\n            latitude: e.detail.position.latitude + prop.latDis,\n            longitude: e.detail.position.longitude + prop.lonDis\n          });\n          document.querySelector(\"a-scene\").appendChild(entity);\n        }\n        testEntitiesAdded = true;\n      }\n    });\n    document.getElementById(\"go\").addEventListener(\"click\", function () {\n      var lat = document.getElementById('lat').value;\n      var lon = document.getElementById('lon').value;\n      var minacc = document.getElementById('minacc').value;\n      console.log(\"change\");\n      el.setAttribute('gps-new-camera', {\n        simulateLatitude: lat,\n        simulateLongitude: lon,\n        positionMinAccuracy: minacc\n      });\n    });\n  }\n};",{"version":3,"sources":["Gps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,eAAA;EAEA,IAAA,EAAA,KAAA;EACA,KAAA,EAAA;IACA,KAAA,EAAA;EACA,CAAA;EACA,WAAA,yBAAA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EAAA,CAEA;EACA,OAAA,qBAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA,IAAA,iBAAA,GAAA,KAAA;IACA,KAAA,CAAA,6HAAA,CAAA;IACA,IAAA,EAAA,GAAA,QAAA,CAAA,aAAA,CAAA,kBAAA,CAAA;IACA,EAAA,CAAA,gBAAA,CAAA,4BAAA,EAAA,UAAA,CAAA,EAAA;MACA,IAAA,CAAA,iBAAA,EAAA;QACA,KAAA,uCAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,kBAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,EAAA;QACA;QACA;QACA,IAAA,UAAA,GAAA,CAAA;UACA,KAAA,EAAA,KAAA;UACA,MAAA,EAAA,KAAA;UACA,MAAA,EAAA;QACA,CAAA,EAAA;UACA,KAAA,EAAA,QAAA;UACA,MAAA,EAAA,CAAA,KAAA;UACA,MAAA,EAAA;QACA,CAAA,EAAA;UACA,KAAA,EAAA,MAAA;UACA,MAAA,EAAA,CAAA;UACA,MAAA,EAAA,CAAA;QACA,CAAA,EAAA;UACA,KAAA,EAAA,OAAA;UACA,MAAA,EAAA,CAAA;UACA,MAAA,EAAA;QACA,CAAA,CACA;QACA,+BAAA,UAAA,iCAAA;UAAA,IAAA,IAAA;UACA,IAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA;UACA,MAAA,CAAA,YAAA,CAAA,OAAA,EAAA;YACA,CAAA,EAAA,EAAA;YACA,CAAA,EAAA,EAAA;YACA,CAAA,EAAA;UACA,CAAA,CAAA;UACA,MAAA,CAAA,YAAA,CAAA,UAAA,EAAA;YAAA,KAAA,EAAA,IAAA,CAAA;UAAA,CAAA,CAAA;UACA,MAAA,CAAA,YAAA,CAAA,sBAAA,EAAA;YACA,QAAA,EAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,GAAA,IAAA,CAAA,MAAA;YACA,SAAA,EAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,GAAA,IAAA,CAAA;UACA,CAAA,CAAA;UACA,QAAA,CAAA,aAAA,CAAA,SAAA,CAAA,CAAA,WAAA,CAAA,MAAA,CAAA;QACA;QACA,iBAAA,GAAA,IAAA;MACA;IACA,CAAA,CAAA;IAEA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,YAAA;MACA,IAAA,GAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,CAAA,KAAA;MACA,IAAA,GAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,CAAA,KAAA;MACA,IAAA,MAAA,GAAA,QAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CAAA,KAAA;MACA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA;MACA,EAAA,CAAA,YAAA,CAAA,gBAAA,EAAA;QACA,gBAAA,EAAA,GAAA;QACA,iBAAA,EAAA,GAAA;QACA,mBAAA,EAAA;MAAA,CAAA,CAAA;IACA,CAAA,CAAA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <div class=\"gps\">\n\t<a-scene  vr-mode-ui='enabled: false' arjs-new=\"sourceType: webcam;videoTexture: true; debugUIEnabled: false\" renderer='antialias: true; alpha: true' v-pre>\n\t<!--\n\t\t<a-camera gps-new-camera='gpsMinDistance: 5' look-controls-enabled='false' arjs-device-orientation-controls></a-camera>\n\t-->\n\t\t<!-- <a-box scale='40 40 40' material = \"color :black;\" gps-new-entity-place='latitude:31.187619 ;longitude:121.429286 ;' v-pre></a-box> -->\n\t\t<a-camera gps-new-camera='gpsMinDistance: 5' v-pre></a-camera>\n\t</a-scene>\n\t<div id='setloc' style='position:absolute; left: 10px; bottom: 2%; z-index:999; background-color: blue; color: white; padding: 10px'>\n\t\tLat:<input id=\"lat\" value=\"31.187619\" />\n\t\tLon: <input id=\"lon\" value=\"121.429286\"/>\n\t\tMin Acc: <input id='minacc' value='1000' /> <input type='button' id='go' value='go' />\n\t</div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n\t\n\tname: 'Gps',\n\tprops: {\n\t\ttitle: String\n\t},\n\tbeforeMount() {\n\n\t\t//   navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t\t//       console.log(devices);\n\t\t//  if(devices){ devices.forEach(function(e){\n\t\t//       console.log(e)\n\t\t//       if(e.kind==\"videoinput\")\n\t\t//       {\n\t\t//           camreass.push(e.deviceId)\n\t\t//       }\n\t\t//   })}\n\t\t//   console.log(camreass)\n\t\t\t\n\t\t// })\n\n\t},\n\tmounted() {\n\t\t// navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t\t//       console.log(devices);\n\t\t//  if(devices){ devices.forEach(function(e){\n\t\t//       console.log(e)\n\t\t//       if(e.kind==\"videoinput\")\n\t\t//       {\n\t\t//           camreass.push(e.deviceId)\n\t\t//       }\n\t\t//   })}\n\t\t//   console.log(camreass)\n\t\t// }).then(()=>{\n\t\t\t// const length = camreass.length;\n\t\t\t// const sceneEl = document.querySelector(\"[arjs]\");\n\t\t\t// const sceneSy = sceneEl.systems[\"arjs\"];\n\t\t\t// sceneEl.setAttribute('arjs',{sourceType: \"webcam\",deviceId:camreass[length-1],videoTexture: true,debugUIEnabled: false,})\n\t\t\t// console.log(\"length1\",length);\n\t\t\t// sceneSy.init(); \n\t\t// })\n\t\t\n\t// sceneSy.init(); \n\n\tlet testEntitiesAdded = false;\n\talert('If testing the lat/lon manual input on a mobile device, please turn off your GPS to avoid the real location being detected.');\n\tconst el = document.querySelector(\"[gps-new-camera]\");\n\tel.addEventListener(\"gps-camera-update-position\", e => {\n\t\tif(!testEntitiesAdded) {\n\t\t\talert(`Got first GPS position: lon ${e.detail.position.longitude} lat ${e.detail.position.latitude}`);\n\t\t\t// Add four boxes to the north (red), south (yellow), west (blue)\n\t\t\t// and east (red) of the initial GPS position\n\t\t\tconst properties = [{\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tlatDis: 0.001,\n\t\t\t\t\tlonDis: 0\n\t\t\t\t},{\n\t\t\t\t\tcolor: 'yellow',\n\t\t\t\t\tlatDis: -0.001,\n\t\t\t\t\tlonDis: 0\n\t\t\t\t},{\n\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\tlatDis: 0,\n\t\t\t\t\tlonDis: -0.001\n\t\t\t\t},{\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t\tlatDis: 0,\n\t\t\t\t\tlonDis: 0.001\n\t\t\t\t}\n\t\t\t];\n\t\t\tfor(const prop of properties){\n\t\t\t\tconst entity = document.createElement(\"a-box\");\n\t\t\t\tentity.setAttribute(\"scale\", {\n\t\t\t\t\tx: 20, \n\t\t\t\t\ty: 20,\n\t\t\t\t\tz: 20\n\t\t\t\t});\n\t\t\t\tentity.setAttribute('material', { color: prop.color } );\n\t\t\t\tentity.setAttribute('gps-new-entity-place', {\n\t\t\t\t\tlatitude: e.detail.position.latitude + prop.latDis,\n\t\t\t\t\tlongitude: e.detail.position.longitude + prop.lonDis\n\t\t\t\t});\n\t\t\t\tdocument.querySelector(\"a-scene\").appendChild(entity);\n\t\t\t}\n\t\t\ttestEntitiesAdded = true;\n\t\t}\n\t});\n\n\tdocument.getElementById(\"go\").addEventListener(\"click\", ()=> {\n\t\tconst lat = document.getElementById('lat').value;\n\t\tconst lon = document.getElementById('lon').value;\n\t\tconst minacc = document.getElementById('minacc').value;\n\t\tconsole.log(\"change\")\n\t\tel.setAttribute('gps-new-camera', { \n\t\t\tsimulateLatitude: lat, \n\t\t\tsimulateLongitude: lon, \n\t\t\tpositionMinAccuracy: minacc } );\n\t});\n\t}\n}\n\n\n</script>\n\n<style scoped>\n  .site-title {\n    text-transform: uppercase;\n  }\n  .paintball {\n    max-width: 600px;\n    margin: 0 auto;\n    text-align: center;\n  }\n  button {\n    font-size: 20px;\n    display: block;\n    border: none;\n    color: #fff;\n    background-color: hsla(248, 100%, 76%, 1);\n    border-radius: 6px;\n    margin: 0 auto .5em;\n    padding: .5em 1em;\n    box-shadow: 4px 4px 0px #000;\n    transition: .25s;\n  }\n  button:hover {\n    box-shadow: 2px 2px 0px #000;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}