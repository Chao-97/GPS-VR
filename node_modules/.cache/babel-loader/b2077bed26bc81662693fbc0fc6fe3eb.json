{"remainingRequest":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/babel-loader/lib/index.js!/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chao/Desktop/GPS-vue1/GPS-VR/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/src/components/Map.vue","mtime":1668075888439},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js","mtime":1668144288754},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/babel-loader/lib/index.js","mtime":1668144288845},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/cache-loader/dist/cjs.js","mtime":1668144288754},{"path":"/Users/chao/Desktop/GPS-vue1/GPS-VR/node_modules/vue-loader/lib/index.js","mtime":1668144288965}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport styleJson1 from \"../custom_map_config.json\";\nexport default {\n  name: 'Gps1',\n  props: {\n    title: String\n  },\n  data: function data() {\n    return {\n      lat: 0,\n      lon: 0\n    };\n  },\n  beforeMount: function beforeMount() {},\n  mounted: function mounted() {\n    //默认城市\n    var map = new BMapGL.Map('map', {\n      showControls: true\n      // enableIconClick: true,\n    }); // 创建Map实例,添加室内图控件\n    //var map = new BMap.Map(\"container\");   // 创建Map实例\n    var point = new BMapGL.Point(116.514, 39.915); // 创建点坐标\n    // map.centerAndZoom(point, 16); // 初始化地图,设置中心点坐标和地图级别\n    // map.enableScrollWheelZoom(true);\n    var convertor = new BMapGL.Convertor();\n    var geolocation = new BMapGL.Geolocation();\n    // 开启SDK辅助定位\n    geolocation.enableSDKLocation();\n    geolocation.getCurrentPosition(function (r) {\n      if (this.getStatus() == BMAP_STATUS_SUCCESS) {\n        map.centerAndZoom(r.point, 16); // 初始化地图,设置中心点坐标和地图级别\n        map.enableScrollWheelZoom(true);\n        var mk = new BMapGL.Marker(r.point);\n        map.addOverlay(mk);\n        map.panTo(r.point);\n        alert('您的位置：' + r.point.lng + ',' + r.point.lat);\n      } else {\n        alert('failed' + this.getStatus());\n      }\n    });\n    // 创建定位控件\n    var locationControl = new BMapGL.LocationControl({\n      // 控件的停靠位置（可选，默认左上角）\n      anchor: BMAP_ANCHOR_TOP_RIGHT,\n      // 控件基于停靠位置的偏移量（可选）\n      offset: new BMapGL.Size(20, 20)\n    });\n    // 将控件添加到地图上\n    map.addControl(locationControl);\n\n    // 添加定位事件\n    locationControl.addEventListener(\"locationSuccess\", function (e) {\n      var address = '';\n      address += e.addressComponent.province;\n      address += e.addressComponent.city;\n      address += e.addressComponent.district;\n      address += e.addressComponent.street;\n      address += e.addressComponent.streetNumber;\n      alert(\"当前定位地址为：\" + address);\n    });\n    locationControl.addEventListener(\"locationError\", function (e) {\n      alert(e.message);\n    });\n\n    // if (navigator.geolocation) {\n    //     navigator.geolocation.getCurrentPosition(function (position) {\n    //         var lat = position.coords.latitude;\n    //         var lon = position.coords.longitude;\n    //         console.log(lat,lon);\n    // \t\tvar map = new BMapGL.Map('map',{\n    // \t\t\t\t\t\t\t\tshowControls: true,\n    // \t\t\t\t\t\t\t\tenableIconClick: true}); // 创建Map实例,添加室内图控件\n    //         //var map = new BMap.Map(\"container\");   // 创建Map实例\n    //         var point = new BMapGL.Point(lon, lat); // 创建点坐标\n    //         var convertor = new BMapGL.Convertor();\n\n    //         var gc = new BMapGL.Geocoder();\n    //         var pointArr = [];\n    //         pointArr.push(point);\n    //         convertor.translate(pointArr, 1, 5, function(data){\n    //           console.log(data);\n    //           if(data.status === 0){\n    // \t\t\t  var point_new = new BMapGL.Point(data.points[0].lng,data.points[0].lat); // 创建点坐标\n    // \t\t\t  map.centerAndZoom(point_new, 16); // 初始化地图,设置中心点坐标和地图级别\n    // \t\t\t  map.enableScrollWheelZoom(true);\n    // \t\t\t  // map.setMapStyleV2({styleJson: styleJson1});\n    // \t\t\t  // 隐藏室内图\n    // \t\t\t  // map.setDisplayOptions({\n    // \t\t\t  //     indoor: true\n    // \t\t\t  // });\n    // \t\t\t  // var marker1 = new BMapGL.Marker(point_new);\n    // \t\t\t  // map.addOverlay(marker1);\n\n    //              gc.getLocation(data.points[0], function (rs) {\n    //               var addComp = rs.addressComponents;\n    //               var curCity = {\n    //                   id: '',\n    //                   city: `${addComp.city}`,\n    //                   district:`${addComp.district}`,\n    //                   street:`${addComp.street}`,\n    //                   streetNumber:`${addComp.streetNumber}`,\n    //                   province:`${addComp.province}`,\n    //                   date: `${new Date()}`\n    //               };\n    //               //当前定位城市\n    //               console.log(\"curCity0:\",curCity);\n\n    //               // $.cookie('VP_MOBILE_CURRENTCITY', JSON.stringify(curCity), { expires: 7, path: '/' });\n    //               //alert(addComp.province + \", \" + addComp.city + \", \" + addComp.district + \", \" + addComp.street);\n    //               // if (successFunc != undefined)\n    //               //     successFunc(addComp);\n    //               });\n    //           }\n\n    //         })\n    //     },\n    //     function (error) {\n    //         switch (error.code) {\n    //             case 1:\n    //                 alert(\"位置服务被拒绝。\");\n    //                 break;\n    //             case 2:\n    //                 alert(\"暂时获取不到位置信息。\");\n    //                 break;\n    //             case 3:\n    //                 alert(\"获取位置信息超时。\");\n    //                 break;\n    //             default:\n    //                 alert(\"未知错误。\");\n    //                 break;\n    //         }\n    //         var curCity = {\n    //             id: '000001',\n    //             name: '北京市',\n    //             date: new Date()\n    //         };\n    //         //默认城市\n    //          console.log(\"curCity1:\",curCity);\n\n    //         // $.cookie('VP_MOBILE_DEFAULTCITY', JSON.stringify(curCity), { expires: 1, path: '/' });\n    //         // if (errorFunc != undefined)\n    //         //     errorFunc(error);\n    //     }, { timeout: 5000, enableHighAccuracy: true });\n    // } else {\n    //     alert(\"你的浏览器不支持获取地理位置信息。\");\n    //     // if (errorFunc != undefined)\n    //     //     errorFunc(\"你的浏览器不支持获取地理位置信息。\");\n    // }\n  }\n};",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,UAAA;AACA,eAAA;EAEA,IAAA,EAAA,MAAA;EACA,KAAA,EAAA;IACA,KAAA,EAAA;EACA,CAAA;EACA,IAAA,kBAAA;IACA,OAAA;MACA,GAAA,EAAA,CAAA;MACA,GAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,WAAA,yBAAA,CAGA,CAAA;EACA,OAAA,qBAAA;IACA;IACA,IAAA,GAAA,GAAA,IAAA,MAAA,CAAA,GAAA,CAAA,KAAA,EAAA;MACA,YAAA,EAAA;MACA;IACA,CAAA,CAAA,CAAA,CAAA;IACA;IACA,IAAA,KAAA,GAAA,IAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,CAAA;IACA;IACA;IACA,IAAA,SAAA,GAAA,IAAA,MAAA,CAAA,SAAA,EAAA;IAEA,IAAA,WAAA,GAAA,IAAA,MAAA,CAAA,WAAA,EAAA;IACA;IACA,WAAA,CAAA,iBAAA,EAAA;IACA,WAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,EAAA;MACA,IAAA,IAAA,CAAA,SAAA,EAAA,IAAA,mBAAA,EAAA;QACA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA;QACA,GAAA,CAAA,qBAAA,CAAA,IAAA,CAAA;QACA,IAAA,EAAA,GAAA,IAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA;QACA,GAAA,CAAA,UAAA,CAAA,EAAA,CAAA;QACA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA;QACA,KAAA,CAAA,OAAA,GAAA,CAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;MACA,CAAA,MACA;QACA,KAAA,CAAA,QAAA,GAAA,IAAA,CAAA,SAAA,EAAA,CAAA;MACA;IACA,CAAA,CAAA;IACA;IACA,IAAA,eAAA,GAAA,IAAA,MAAA,CAAA,eAAA,CAAA;MACA;MACA,MAAA,EAAA,qBAAA;MACA;MACA,MAAA,EAAA,IAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA;IACA,CAAA,CAAA;IACA;IACA,GAAA,CAAA,UAAA,CAAA,eAAA,CAAA;;IAEA;IACA,eAAA,CAAA,gBAAA,CAAA,iBAAA,EAAA,UAAA,CAAA,EAAA;MACA,IAAA,OAAA,GAAA,EAAA;MACA,OAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,QAAA;MACA,OAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,IAAA;MACA,OAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,QAAA;MACA,OAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,MAAA;MACA,OAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,YAAA;MACA,KAAA,CAAA,UAAA,GAAA,OAAA,CAAA;IACA,CAAA,CAAA;IACA,eAAA,CAAA,gBAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA;MACA,KAAA,CAAA,CAAA,CAAA,OAAA,CAAA;IACA,CAAA,CAAA;;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAOA;AAEA,CAAA","sourcesContent":["<template>\n  <div id = \"map\"> \n    \n</div>\n</template>\n\n<script>\nimport styleJson1 from '../custom_map_config.json'\nexport default {\n\t\n\tname: 'Gps1',\n\tprops: {\n\t\ttitle: String\n\t},\n\tdata() {\n\t\treturn{\n\t\t\tlat:0,\n\t\t\tlon:0,\n\t\t}\n\t},\n\tbeforeMount() {\n\t\t\n\t\n\t},\n\tmounted() {\n\t\t//默认城市\n\t\tvar map = new BMapGL.Map('map',{\n\t\t\t\t\t\t\t\tshowControls: true,\n\t\t\t\t\t\t\t\t// enableIconClick: true,\n\t\t\t\t\t\t\t\t}); // 创建Map实例,添加室内图控件\n\t\t//var map = new BMap.Map(\"container\");   // 创建Map实例\n\t\tvar point = new BMapGL.Point(116.514, 39.915); // 创建点坐标\n\t\t// map.centerAndZoom(point, 16); // 初始化地图,设置中心点坐标和地图级别\n\t\t// map.enableScrollWheelZoom(true);\n\t\tvar convertor = new BMapGL.Convertor();\n\t\t\n\t\tvar geolocation = new BMapGL.Geolocation();\n\t\t    // 开启SDK辅助定位\n\t\tgeolocation.enableSDKLocation();\n\t\tgeolocation.getCurrentPosition(function(r){\n\t\t\tif(this.getStatus() == BMAP_STATUS_SUCCESS){\n\t\t\t\tmap.centerAndZoom(r.point, 16); // 初始化地图,设置中心点坐标和地图级别\n\t\t\t\tmap.enableScrollWheelZoom(true);\n\t\t\t\tvar mk = new BMapGL.Marker(r.point);\n\t\t\t\tmap.addOverlay(mk);\n\t\t\t\tmap.panTo(r.point);\n\t\t\t\talert('您的位置：' + r.point.lng + ',' + r.point.lat);\n\t\t\t}\n\t\t\telse {\n\t\t\t\talert('failed' + this.getStatus());\n\t\t\t}        \n\t\t});\n\t\t// 创建定位控件\n\t\tvar locationControl = new BMapGL.LocationControl({\n\t\t\t// 控件的停靠位置（可选，默认左上角）\n\t\t\tanchor: BMAP_ANCHOR_TOP_RIGHT,\n\t\t\t// 控件基于停靠位置的偏移量（可选）\n\t\t\toffset: new BMapGL.Size(20, 20)\n\t\t});\n\t\t// 将控件添加到地图上\n\t\tmap.addControl(locationControl);\n\n\t\t// 添加定位事件\n\t\tlocationControl.addEventListener(\"locationSuccess\", function(e){\n\t\t\tvar address = '';\n\t\t\taddress += e.addressComponent.province;\n\t\t\taddress += e.addressComponent.city;\n\t\t\taddress += e.addressComponent.district;\n\t\t\taddress += e.addressComponent.street;\n\t\t\taddress += e.addressComponent.streetNumber;\n\t\t\talert(\"当前定位地址为：\" + address);\n\t\t});\n\t\tlocationControl.addEventListener(\"locationError\",function(e){\n\t\t\talert(e.message);\n\t\t});\n\t\t\n\t\t\t\n\t\t\n\t\t// if (navigator.geolocation) {\n\t\t//     navigator.geolocation.getCurrentPosition(function (position) {\n\t\t//         var lat = position.coords.latitude;\n\t\t//         var lon = position.coords.longitude;\n\t\t//         console.log(lat,lon);\n\t\t// \t\tvar map = new BMapGL.Map('map',{\n\t\t// \t\t\t\t\t\t\t\tshowControls: true,\n\t\t// \t\t\t\t\t\t\t\tenableIconClick: true}); // 创建Map实例,添加室内图控件\n\t\t//         //var map = new BMap.Map(\"container\");   // 创建Map实例\n\t\t//         var point = new BMapGL.Point(lon, lat); // 创建点坐标\n\t\t//         var convertor = new BMapGL.Convertor();\n\n\t\t//         var gc = new BMapGL.Geocoder();\n\t\t//         var pointArr = [];\n\t\t//         pointArr.push(point);\n\t\t//         convertor.translate(pointArr, 1, 5, function(data){\n\t\t//           console.log(data);\n\t\t//           if(data.status === 0){\n\t\t// \t\t\t  var point_new = new BMapGL.Point(data.points[0].lng,data.points[0].lat); // 创建点坐标\n\t\t// \t\t\t  map.centerAndZoom(point_new, 16); // 初始化地图,设置中心点坐标和地图级别\n\t\t// \t\t\t  map.enableScrollWheelZoom(true);\n\t\t// \t\t\t  // map.setMapStyleV2({styleJson: styleJson1});\n\t\t// \t\t\t  // 隐藏室内图\n\t\t// \t\t\t  // map.setDisplayOptions({\n\t\t// \t\t\t  //     indoor: true\n\t\t// \t\t\t  // });\n\t\t// \t\t\t  // var marker1 = new BMapGL.Marker(point_new);\n\t\t// \t\t\t  // map.addOverlay(marker1);\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t  \n\t\t//              gc.getLocation(data.points[0], function (rs) {\n\t\t//               var addComp = rs.addressComponents;\n\t\t//               var curCity = {\n\t\t//                   id: '',\n\t\t//                   city: `${addComp.city}`,\n\t\t//                   district:`${addComp.district}`,\n\t\t//                   street:`${addComp.street}`,\n\t\t//                   streetNumber:`${addComp.streetNumber}`,\n\t\t//                   province:`${addComp.province}`,\n\t\t//                   date: `${new Date()}`\n\t\t//               };\n\t\t//               //当前定位城市\n\t\t//               console.log(\"curCity0:\",curCity);\n\t\t              \n\t\t//               // $.cookie('VP_MOBILE_CURRENTCITY', JSON.stringify(curCity), { expires: 7, path: '/' });\n\t\t//               //alert(addComp.province + \", \" + addComp.city + \", \" + addComp.district + \", \" + addComp.street);\n\t\t//               // if (successFunc != undefined)\n\t\t//               //     successFunc(addComp);\n\t\t//               });\n\t\t//           }\n\t\t         \n\t\t//         })\n\t\t//     },\n\t\t//     function (error) {\n\t\t//         switch (error.code) {\n\t\t//             case 1:\n\t\t//                 alert(\"位置服务被拒绝。\");\n\t\t//                 break;\n\t\t//             case 2:\n\t\t//                 alert(\"暂时获取不到位置信息。\");\n\t\t//                 break;\n\t\t//             case 3:\n\t\t//                 alert(\"获取位置信息超时。\");\n\t\t//                 break;\n\t\t//             default:\n\t\t//                 alert(\"未知错误。\");\n\t\t//                 break;\n\t\t//         }\n\t\t//         var curCity = {\n\t\t//             id: '000001',\n\t\t//             name: '北京市',\n\t\t//             date: new Date()\n\t\t//         };\n\t\t//         //默认城市\n\t\t//          console.log(\"curCity1:\",curCity);\n\t\t\t\t\n\t\t//         // $.cookie('VP_MOBILE_DEFAULTCITY', JSON.stringify(curCity), { expires: 1, path: '/' });\n\t\t//         // if (errorFunc != undefined)\n\t\t//         //     errorFunc(error);\n\t\t//     }, { timeout: 5000, enableHighAccuracy: true });\n\t\t// } else {\n\t\t//     alert(\"你的浏览器不支持获取地理位置信息。\");\n\t\t//     // if (errorFunc != undefined)\n\t\t//     //     errorFunc(\"你的浏览器不支持获取地理位置信息。\");\n\t\t// }\n\t\t\t\n\t\t\n\t\t\n\n\t\t\n\t\t\n\t}\n\t\t\n}\n\n\n</script>\n\n<style scoped>\n\t#map{\n\t\tposition: relative;\n\t\twidth: 100%!important;\n\t\theight: 100%!important;\n\t/* \taspect-ratio: 3072/4096; */\n\t\tdisplay: block;\n\t\t/* top:1em; */\n\t}\n\n</style>\n"],"sourceRoot":"src/components"}]}